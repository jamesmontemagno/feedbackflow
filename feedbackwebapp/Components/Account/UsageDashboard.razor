@namespace FeedbackWebApp.Components.Account
@using FeedbackWebApp.Components.Account
@using SharedDump.Models.Account
@using SharedDump.Utils.Account

<div class="usage-dashboard">
    @if (IsLoading)
    {
        <div class="text-center py-3">
            <div class="spinner-border spinner-border-sm text-primary" role="status">
                <span class="visually-hidden">Loading account information...</span>
            </div>
        </div>
    }
    else if (UserAccount != null && Limits != null)
    {
        <div class="tier-badge tier-@UserAccount.Tier.ToString().ToLower()">
            @UserAccount.Tier Tier
        </div>
        <div class="usage-metrics">
            <UsageMetric Label="Analyses" Used="@UserAccount.AnalysesUsed" Limit="@Limits.AnalysisLimit" />
            <UsageMetric Label="Reports" Used="@UserAccount.ActiveReports" Limit="@Limits.ReportLimit" />
            <UsageMetric Label="Feed Queries" Used="@UserAccount.FeedQueriesUsed" Limit="@Limits.FeedQueryLimit" />
            @if (AccountTierUtils.SupportsApiKeyGeneration(UserAccount.Tier))
            {
                <UsageMetric Label="API Calls" Used="@UserAccount.ApiUsed" Limit="@Limits.ApiLimit" />
            }
        </div>
        @if (IsOverAnyLimit())
        {
            <UpgradePrompt />
        }
    }
    else
    {
        <div class="text-center py-3 text-muted">
            <i class="bi bi-exclamation-triangle me-2"></i>
            Unable to load account information
        </div>
    }
</div>

@code {
    [Parameter] public UserAccount? UserAccount { get; set; }
    [Parameter] public AccountLimits? Limits { get; set; }
    [Parameter] public bool IsLoading { get; set; } = false;

    private bool IsOverAnyLimit()
    {
        if (UserAccount == null || Limits == null)
            return false;

        // Check if user is at or over any of their limits
        return UserAccount.AnalysesUsed >= Limits.AnalysisLimit ||
               UserAccount.ActiveReports >= Limits.ReportLimit ||
               UserAccount.FeedQueriesUsed >= Limits.FeedQueryLimit ||
               (AccountTierUtils.SupportsApiKeyGeneration(UserAccount.Tier) && UserAccount.ApiUsed >= Limits.ApiLimit);
    }
}
