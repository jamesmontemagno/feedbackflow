@namespace FeedbackWebApp.Components.Feedback.Forms
@inject IJSRuntime JSRuntime
@using SharedDump.Utils
@using System.Collections.Generic

<div class="mt-4">
    <div class="form-floating mb-3">
        <input type="text" 
               class="form-control @(IsShortlink ? "is-warning" : "")" 
               id="redditThread" 
               @bind="ThreadInput" 
               @bind:event="oninput" />
        <label for="redditThread">Reddit Thread URL or ID</label>
    </div>
    
    @if (IsShortlink)
    {
        <div class="shortlink-warning alert alert-warning d-flex align-items-center justify-content-between" role="alert">
            <div>
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                Reddit shortlink detected. This may not resolve correctly. 
                For best results, please visit the actual post page and copy the full URL.
            </div>
            <div>
                <button type="button" 
                        class="btn btn-outline-secondary btn-sm ms-2 action-btn" 
                        @onclick="OpenShortlinkInNewWindow">
                    <i class="bi bi-box-arrow-up-right me-1"></i>Open link
                </button>
            </div>
        </div>
    }
</div>

@code {
    private string _threadInput = "";
    private bool _isShortlink = false;

    public bool IsShortlink => _isShortlink;

    public string ThreadInput
    {
        get => _threadInput;
        set
        {
            if (_threadInput != value)
            {
                _threadInput = value;
                ThreadId = value.Trim();
                CheckForShortlink();
            }
        }
    }

    public string ThreadId { get; private set; } = "";

    private void CheckForShortlink()
    {
        if (string.IsNullOrWhiteSpace(_threadInput))
        {
            _isShortlink = false;
            return;
        }

        _isShortlink = RedditUrlParser.IsRedditShortUrl(_threadInput.Trim());
    }

    private async Task OpenShortlinkInNewWindow()
    {
        var url = _threadInput.Trim();
        
        // Ensure the URL has the http/https prefix
        if (!url.StartsWith("http://") && !url.StartsWith("https://"))
        {
            url = "https://" + url;
        }
        
        await JSRuntime.InvokeVoidAsync("open", url, "_blank");
    }

    public void RefreshUI()
    {
        StateHasChanged();
    }
}