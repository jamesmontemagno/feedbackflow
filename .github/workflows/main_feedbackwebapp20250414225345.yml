# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - feedbackwebapp20250414225345

on:
  push:
    branches:
      - main
    paths:
      - 'feedbackwebapp/**'
      - 'shareddump/**'
      - 'FeedbackFlow.ServiceDefaults/**'
      - '.github/workflows/main_feedbackwebapp20250414225345.yml'
  workflow_dispatch:

env:
  WEB_APP_NAME: 'feedbackwebapp' # set this to the path to your web app project, defaults to the repository root
  WEB_APP_PATH: './feedbackwebapp' # set this to the path to your web app project, defaults to the repository root


jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Build with dotnet
        run: dotnet build "${{env.WEB_APP_PATH}}" --configuration Release

      - name: dotnet publish
        run: dotnet publish "${{env.WEB_APP_PATH}}" -c Release -o "${{env.DOTNET_ROOT}}/${{env.WEB_APP_NAME}}"

      - name: Verify static assets in publish output
        shell: pwsh
        run: |
          Write-Host "üîç Verifying static assets in publish output..."
          $brCount = (Get-ChildItem -Path "${{env.DOTNET_ROOT}}/${{env.WEB_APP_NAME}}/wwwroot" -Recurse -Filter "*.br" -ErrorAction SilentlyContinue).Count
          $gzCount = (Get-ChildItem -Path "${{env.DOTNET_ROOT}}/${{env.WEB_APP_NAME}}/wwwroot" -Recurse -Filter "*.gz" -ErrorAction SilentlyContinue).Count
          Write-Host "Found $brCount Brotli files and $gzCount Gzip files"
          
          if ($brCount -eq 0 -or $gzCount -eq 0) {
            Write-Host "‚ö†Ô∏è  Warning: Precompressed assets may be missing"
          } else {
            Write-Host "‚úÖ Precompressed assets verified"
          }

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/${{env.WEB_APP_NAME}}

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_76B1871B1DD14EA2BEF81BD46B0B7298 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7994343D83D544D7B91D9E9E656BDBBE }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A1D5E2DC840E4D0AA80422C02B7D3443 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'feedbackwebapp20250414225345'
          slot-name: 'Production'
          package: .
          